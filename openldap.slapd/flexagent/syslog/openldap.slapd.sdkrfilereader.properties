# FlexAgent Regex Configuration File
do.unparsed.events=true
comments.start.with=\#
trim.tokens=true
contains.empty.tokens=true
additionaldata.enabled=true

regex=.*(slapd\\S+): \\[(.*)\\] conn=(\\S+) (.*)

token.count=4

token[0].name=process
token[0].type=String

token[1].name=date
token[1].type=String

token[2].name=conn
token[2].type=String

token[3].name=message
token[3].type=String

# Mapping

event.deviceVendor=__stringConstant("OpenLDAP")
event.deviceProduct=__stringConstant("slapd")

event.deviceProcessName=process

event.name=__stringConstant("LDAP log")
#event.message=message


additionaldata.Connection Number=conn


# Submessage

submessage.token=message

submessage.count=1
submessage[0].pattern.count=14

submessage[0].pattern[0].regex=op=(\\S+) (SRCH) base="(.*)" scope=(\\d+) filter="(.*)" attrs=(.*)
submessage[0].pattern[0].fields=additionaldata.Operation Number,event.deviceAction,event.deviceCustomString1,event.deviceCustomNumber1,event.deviceCustomString2,event.deviceCustomString3
submessage[0].pattern[0].extramappings=event.priority\=__integerConstant("3")|event.deviceCustomNumber1Label\=__stringConstant("Scope")|event.deviceCustomString1Label\=__stringConstant("Base")|event.deviceCustomString2Label\=__stringConstant("Filter")|event.deviceCustomString3Label\=__stringConstant("Attrs")
submessage[0].pattern[0].conditionalmap.count=1
submessage[0].pattern[0].conditionalmap[0].field=event.deviceCustomNumber1
submessage[0].pattern[0].conditionalmap[0].mappings.count=3
submessage[0].pattern[0].conditionalmap[0].mappings[0].values=0
submessage[0].pattern[0].conditionalmap[0].mappings[0].event.name=__stringConstant("Base search")
submessage[0].pattern[0].conditionalmap[0].mappings[1].values=1
submessage[0].pattern[0].conditionalmap[0].mappings[1].event.name=__stringConstant("One-level search")
submessage[0].pattern[0].conditionalmap[0].mappings[2].values=2
submessage[0].pattern[0].conditionalmap[0].mappings[2].event.name=__stringConstant("Subtree search")

submessage[0].pattern[1].regex=op=(\\S+) (RESULT) err=(\\d+) tag=(\\d+) nentries=(\\d+) etime=(\\d+\\.\\d+)(.*)
submessage[0].pattern[1].fields=additionaldata.Operation Number,event.deviceAction,event.deviceCustomNumber1,event.deviceCustomNumber2,event.deviceCustomNumber3,event.deviceCustomString1,event.deviceCustomString2
submessage[0].pattern[1].extramappings=event.deviceCustomNumber1Label\=__stringConstant("Error Number")|event.deviceCustomNumber2Label\=__stringConstant("Tag")|event.deviceCustomNumber3Label\=__stringConstant("Entries Number")|event.deviceCustomString1Label\=__stringConstant("Elapsed Time")|event.deviceCustomString2Label\=__stringConstant("Message")
submessage[0].pattern[1].conditionalmap.count=1
submessage[0].pattern[1].conditionalmap[0].field=event.deviceCustomNumber1
submessage[0].pattern[1].conditionalmap[0].mappings.count=52
submessage[0].pattern[1].conditionalmap[0].mappings[0].values=0
submessage[0].pattern[1].conditionalmap[0].mappings[0].event.name=__stringConstant("SUCCESS")
submessage[0].pattern[1].conditionalmap[0].mappings[0].event.priority=__integerConstant("3")
submessage[0].pattern[1].conditionalmap[0].mappings[1].values=1
submessage[0].pattern[1].conditionalmap[0].mappings[1].event.name=__stringConstant("OPERATION_ERROR")
submessage[0].pattern[1].conditionalmap[0].mappings[1].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[2].values=2
submessage[0].pattern[1].conditionalmap[0].mappings[2].event.name=__stringConstant("PROTOCOL_ERROR")
submessage[0].pattern[1].conditionalmap[0].mappings[2].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[3].values=3
submessage[0].pattern[1].conditionalmap[0].mappings[3].event.name=__stringConstant("TIME_LIMIT_EXCEEDED")
submessage[0].pattern[1].conditionalmap[0].mappings[3].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[4].values=4
submessage[0].pattern[1].conditionalmap[0].mappings[4].event.name=__stringConstant("SIZE_LIMIT_EXCEEDED")
submessage[0].pattern[1].conditionalmap[0].mappings[4].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[5].values=5
submessage[0].pattern[1].conditionalmap[0].mappings[5].event.name=__stringConstant("COMPARE_FALSE")
submessage[0].pattern[1].conditionalmap[0].mappings[5].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[6].values=6
submessage[0].pattern[1].conditionalmap[0].mappings[6].event.name=__stringConstant("COMPARE_TRUE")
submessage[0].pattern[1].conditionalmap[0].mappings[6].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[7].values=7
submessage[0].pattern[1].conditionalmap[0].mappings[7].event.name=__stringConstant("AUTH_METHOD_NOT_SUPPORTED")
submessage[0].pattern[1].conditionalmap[0].mappings[7].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[8].values=8
submessage[0].pattern[1].conditionalmap[0].mappings[8].event.name=__stringConstant("STRONG_AUTH_REQUIRED")
submessage[0].pattern[1].conditionalmap[0].mappings[8].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[9].values=9
submessage[0].pattern[1].conditionalmap[0].mappings[9].event.name=__stringConstant("LDAP_PARTIAL_RESULTS")
submessage[0].pattern[1].conditionalmap[0].mappings[9].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[10].values=10
submessage[0].pattern[1].conditionalmap[0].mappings[10].event.name=__stringConstant("REFERRAL (LDAP v3)")
submessage[0].pattern[1].conditionalmap[0].mappings[10].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[11].values=11
submessage[0].pattern[1].conditionalmap[0].mappings[11].event.name=__stringConstant("ADMIN_LIMIT_EXCEEDED (LDAP v3) 	")
submessage[0].pattern[1].conditionalmap[0].mappings[11].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[12].values=12
submessage[0].pattern[1].conditionalmap[0].mappings[12].event.name=__stringConstant("UNAVAILABLE_CRITICAL_EXTENSION (LDAP v3)")
submessage[0].pattern[1].conditionalmap[0].mappings[12].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[13].values=13
submessage[0].pattern[1].conditionalmap[0].mappings[13].event.name=__stringConstant("CONFIDENTIALITY_REQUIRED (LDAP v3)")
submessage[0].pattern[1].conditionalmap[0].mappings[13].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[14].values=14
submessage[0].pattern[1].conditionalmap[0].mappings[14].event.name=__stringConstant("SASL_BIND_IN_PROGRESS")
submessage[0].pattern[1].conditionalmap[0].mappings[14].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[15].values=16
submessage[0].pattern[1].conditionalmap[0].mappings[15].event.name=__stringConstant("NO_SUCH_ATTRIBUTE")
submessage[0].pattern[1].conditionalmap[0].mappings[15].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[16].values=17
submessage[0].pattern[1].conditionalmap[0].mappings[16].event.name=__stringConstant("UNDEFINED_ATTRIBUTE_TYPE")
submessage[0].pattern[1].conditionalmap[0].mappings[16].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[17].values=18
submessage[0].pattern[1].conditionalmap[0].mappings[17].event.name=__stringConstant("INAPPROPRIATE_MATCHING")
submessage[0].pattern[1].conditionalmap[0].mappings[17].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[18].values=19
submessage[0].pattern[1].conditionalmap[0].mappings[18].event.name=__stringConstant("CONSTRAINT_VIOLATION")
submessage[0].pattern[1].conditionalmap[0].mappings[18].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[19].values=20
submessage[0].pattern[1].conditionalmap[0].mappings[19].event.name=__stringConstant("ATTRIBUTE_OR_VALUE_EXISTS")
submessage[0].pattern[1].conditionalmap[0].mappings[19].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[20].values=21
submessage[0].pattern[1].conditionalmap[0].mappings[20].event.name=__stringConstant("INVALID_ATTRIBUTE_SYNTAX")
submessage[0].pattern[1].conditionalmap[0].mappings[20].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[21].values=32
submessage[0].pattern[1].conditionalmap[0].mappings[21].event.name=__stringConstant("NO_SUCH_OBJECT")
submessage[0].pattern[1].conditionalmap[0].mappings[21].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[22].values=33
submessage[0].pattern[1].conditionalmap[0].mappings[22].event.name=__stringConstant("ALIAS_PROBLEM")
submessage[0].pattern[1].conditionalmap[0].mappings[22].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[23].values=34
submessage[0].pattern[1].conditionalmap[0].mappings[23].event.name=__stringConstant("INVALID_DN_SYNTAX")
submessage[0].pattern[1].conditionalmap[0].mappings[23].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[24].values=35
submessage[0].pattern[1].conditionalmap[0].mappings[24].event.name=__stringConstant("IS_LEAF")
submessage[0].pattern[1].conditionalmap[0].mappings[24].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[25].values=36
submessage[0].pattern[1].conditionalmap[0].mappings[25].event.name=__stringConstant("ALIAS_DEREFERENCING_PROBLEM")
submessage[0].pattern[1].conditionalmap[0].mappings[25].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[26].values=48
submessage[0].pattern[1].conditionalmap[0].mappings[26].event.name=__stringConstant("INAPPROPRIATE_AUTHENTICATION")
submessage[0].pattern[1].conditionalmap[0].mappings[26].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[27].values=49
submessage[0].pattern[1].conditionalmap[0].mappings[27].event.name=__stringConstant("INVALID_CREDENTIALS")
submessage[0].pattern[1].conditionalmap[0].mappings[27].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[28].values=50
submessage[0].pattern[1].conditionalmap[0].mappings[28].event.name=__stringConstant("INSUFFICIENT_ACCESS_RIGHTS")
submessage[0].pattern[1].conditionalmap[0].mappings[28].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[29].values=51
submessage[0].pattern[1].conditionalmap[0].mappings[29].event.name=__stringConstant("BUSY")
submessage[0].pattern[1].conditionalmap[0].mappings[29].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[30].values=52
submessage[0].pattern[1].conditionalmap[0].mappings[30].event.name=__stringConstant("UNAVAILABLE")
submessage[0].pattern[1].conditionalmap[0].mappings[30].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[31].values=53
submessage[0].pattern[1].conditionalmap[0].mappings[31].event.name=__stringConstant("UNWILLING_TO_PERFORM")
submessage[0].pattern[1].conditionalmap[0].mappings[31].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[32].values=54
submessage[0].pattern[1].conditionalmap[0].mappings[32].event.name=__stringConstant("LOOP_DEFECT")
submessage[0].pattern[1].conditionalmap[0].mappings[32].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[33].values=64
submessage[0].pattern[1].conditionalmap[0].mappings[33].event.name=__stringConstant("NAMING_VIOLATION")
submessage[0].pattern[1].conditionalmap[0].mappings[33].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[34].values=65
submessage[0].pattern[1].conditionalmap[0].mappings[34].event.name=__stringConstant("OBJECT_CLASS_VIOLATION")
submessage[0].pattern[1].conditionalmap[0].mappings[34].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[35].values=66
submessage[0].pattern[1].conditionalmap[0].mappings[35].event.name=__stringConstant("NOT_ALLOWED_ON_NONLEAF")
submessage[0].pattern[1].conditionalmap[0].mappings[35].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[36].values=67
submessage[0].pattern[1].conditionalmap[0].mappings[36].event.name=__stringConstant("NOT_ALLOWED_ON_RDN")
submessage[0].pattern[1].conditionalmap[0].mappings[36].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[37].values=68
submessage[0].pattern[1].conditionalmap[0].mappings[37].event.name=__stringConstant("ENTRY_ALREADY_EXISTS")
submessage[0].pattern[1].conditionalmap[0].mappings[37].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[38].values=69
submessage[0].pattern[1].conditionalmap[0].mappings[38].event.name=__stringConstant("OBJECT_CLASS_MODS_PROHIBITED")
submessage[0].pattern[1].conditionalmap[0].mappings[38].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[39].values=71
submessage[0].pattern[1].conditionalmap[0].mappings[39].event.name=__stringConstant("AFFECTS_MULTIPLE_DSAS (LDAP v3)")
submessage[0].pattern[1].conditionalmap[0].mappings[39].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[40].values=80
submessage[0].pattern[1].conditionalmap[0].mappings[40].event.name=__stringConstant("OTHER")
submessage[0].pattern[1].conditionalmap[0].mappings[40].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[41].values=81
submessage[0].pattern[1].conditionalmap[0].mappings[41].event.name=__stringConstant("SERVER_DOWN")
submessage[0].pattern[1].conditionalmap[0].mappings[41].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[42].values=85
submessage[0].pattern[1].conditionalmap[0].mappings[42].event.name=__stringConstant("LDAP_TIMEOUT")
submessage[0].pattern[1].conditionalmap[0].mappings[42].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[43].values=89
submessage[0].pattern[1].conditionalmap[0].mappings[43].event.name=__stringConstant("PARAM_ERROR")
submessage[0].pattern[1].conditionalmap[0].mappings[43].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[44].values=91
submessage[0].pattern[1].conditionalmap[0].mappings[44].event.name=__stringConstant("CONNECT_ERROR")
submessage[0].pattern[1].conditionalmap[0].mappings[44].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[45].values=92
submessage[0].pattern[1].conditionalmap[0].mappings[45].event.name=__stringConstant("LDAP_NOT_SUPPORTED")
submessage[0].pattern[1].conditionalmap[0].mappings[45].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[46].values=93
submessage[0].pattern[1].conditionalmap[0].mappings[46].event.name=__stringConstant("CONTROL_NOT_FOUND")
submessage[0].pattern[1].conditionalmap[0].mappings[46].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[47].values=94
submessage[0].pattern[1].conditionalmap[0].mappings[47].event.name=__stringConstant("NO_RESULTS_RETURNED")
submessage[0].pattern[1].conditionalmap[0].mappings[47].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[48].values=95
submessage[0].pattern[1].conditionalmap[0].mappings[48].event.name=__stringConstant("MORE_RESULTS_TO_RETURN")
submessage[0].pattern[1].conditionalmap[0].mappings[48].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[49].values=96
submessage[0].pattern[1].conditionalmap[0].mappings[49].event.name=__stringConstant("CLIENT_LOOP")
submessage[0].pattern[1].conditionalmap[0].mappings[49].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[50].values=97
submessage[0].pattern[1].conditionalmap[0].mappings[50].event.name=__stringConstant("REFERRAL_LIMIT_EXCEEDED")
submessage[0].pattern[1].conditionalmap[0].mappings[50].event.priority=__integerConstant("5")
submessage[0].pattern[1].conditionalmap[0].mappings[51].event.name=__stringConstant("Undefined")
submessage[0].pattern[1].conditionalmap[0].mappings[51].event.priority=__integerConstant("0")

submessage[0].pattern[2].regex=op=(\\S+) (BIND) dn="(.*)" method=(\\S+) version=(\\d+)(?: mech=(\\S+))*
submessage[0].pattern[2].fields=additionaldata.Operation Number,event.deviceAction,event.deviceCustomString1,event.deviceCustomString2,event.deviceVersion,event.deviceCustomString3
submessage[0].pattern[2].extramappings=event.priority\=__integerConstant("3")|event.deviceCustomString1Label\=__stringConstant("DN")|event.deviceCustomString2Label\=__stringConstant("Method")|event.deviceCustomString3Label\=__stringConstant("Mech")
submessage[0].pattern[2].conditionalmap.count=1
submessage[0].pattern[2].conditionalmap[0].field=event.deviceCustomString2
submessage[0].pattern[2].conditionalmap[0].mappings.count=3
submessage[0].pattern[2].conditionalmap[0].mappings[0].values=0
submessage[0].pattern[2].conditionalmap[0].mappings[0].event.name=__stringConstant("Authentication")
submessage[0].pattern[2].conditionalmap[0].mappings[0].event.priority=__integerConstant("3")
submessage[0].pattern[2].conditionalmap[0].mappings[1].values=128
submessage[0].pattern[2].conditionalmap[0].mappings[1].event.name=__stringConstant("Simple bind with user password")
submessage[0].pattern[2].conditionalmap[0].mappings[1].event.priority=__integerConstant("3")
submessage[0].pattern[2].conditionalmap[0].mappings[2].values=sasl
submessage[0].pattern[2].conditionalmap[0].mappings[2].event.name=__stringConstant("SASL bind using external authentication mechanism")
submessage[0].pattern[2].conditionalmap[0].mappings[2].event.priority=__integerConstant("3")

submessage[0].pattern[3].regex=op=(\\S+) (EXT) oid="(.*)" name="(.*)"
submessage[0].pattern[3].fields=additionaldata.Operation Number,event.deviceAction,event.deviceCustomString1,event.deviceCustomString2
submessage[0].pattern[3].extramappings=event.priority\=__integerConstant("3")|event.deviceCustomString1Label\=__stringConstant("OID")|event.deviceCustomString2Label\=__stringConstant("Name")
submessage[0].pattern[3].conditionalmap.count=1
submessage[0].pattern[3].conditionalmap[0].field=event.deviceCustomString1
submessage[0].pattern[3].conditionalmap[0].mappings.count=7
submessage[0].pattern[3].conditionalmap[0].mappings[0].values=2.16.840.1.113730.3.5.3
submessage[0].pattern[3].conditionalmap[0].mappings[0].event.name=__stringConstant("Directory Server Start Replication Request")
submessage[0].pattern[3].conditionalmap[0].mappings[0].event.message=__stringConstant("Sent by a replication initiator to indicate that a replication session is requested.")
submessage[0].pattern[3].conditionalmap[0].mappings[0].event.priority=__integerConstant("3")
submessage[0].pattern[3].conditionalmap[0].mappings[1].values=2.16.840.1.113730.3.5.4
submessage[0].pattern[3].conditionalmap[0].mappings[1].event.name=__stringConstant("Directory Server Replication Response")
submessage[0].pattern[3].conditionalmap[0].mappings[1].event.message=__stringConstant("Sent by a replication responder in response to a Start Replication Request Extended Operation or an End Replication Request Extended Operation.")
submessage[0].pattern[3].conditionalmap[0].mappings[1].event.priority=__integerConstant("3")
submessage[0].pattern[3].conditionalmap[0].mappings[2].values=2.16.840.1.113730.3.5.5
submessage[0].pattern[3].conditionalmap[0].mappings[2].event.name=__stringConstant("Directory Server End Replication Request")
submessage[0].pattern[3].conditionalmap[0].mappings[2].event.message=__stringConstant("Sent to indicate that a replication session is to be terminated.")
submessage[0].pattern[3].conditionalmap[0].mappings[2].event.priority=__integerConstant("3")
submessage[0].pattern[3].conditionalmap[0].mappings[3].values=2.16.840.1.113730.3.5.6
submessage[0].pattern[3].conditionalmap[0].mappings[3].event.name=__stringConstant("Directory Server Replication Entry Request")
submessage[0].pattern[3].conditionalmap[0].mappings[3].event.message=__stringConstant("Carries an entry, along with its state information (csn and UniqueIdentifier) and is used to perform a replica initialization.")
submessage[0].pattern[3].conditionalmap[0].mappings[3].event.priority=__integerConstant("3")
submessage[0].pattern[3].conditionalmap[0].mappings[4].values=2.16.840.1.113730.3.5.7
submessage[0].pattern[3].conditionalmap[0].mappings[4].event.name=__stringConstant("Directory Server Bulk Import Start")
submessage[0].pattern[3].conditionalmap[0].mappings[4].event.message=__stringConstant("Sent by the client to request a bulk import together with the suffix being imported to and sent by the server to indicate that the bulk import may begin.")
submessage[0].pattern[3].conditionalmap[0].mappings[4].event.priority=__integerConstant("3")
submessage[0].pattern[3].conditionalmap[0].mappings[5].values=2.16.840.1.113730.3.5.8
submessage[0].pattern[3].conditionalmap[0].mappings[5].event.name=__stringConstant("Directory Server Bulk Import Finished")
submessage[0].pattern[3].conditionalmap[0].mappings[5].event.message=__stringConstant("Sent by the client to signal the end of a bulk import and sent by the server to acknowledge it.")
submessage[0].pattern[3].conditionalmap[0].mappings[5].event.priority=__integerConstant("3")
submessage[0].pattern[3].conditionalmap[0].mappings[6].values=2.16.840.1.113730.3.5.12
submessage[0].pattern[3].conditionalmap[0].mappings[6].event.name=__stringConstant("Proxied Authorization (version 1) control")
submessage[0].pattern[3].conditionalmap[0].mappings[6].event.priority=__integerConstant("3")


submessage[0].pattern[4].regex=op=(\\S+) (MOD) dn="(.*)"
submessage[0].pattern[4].fields=additionaldata.Operation Number,event.deviceAction,event.deviceCustomString1
submessage[0].pattern[4].extramappings=event.priority\=__integerConstant("3")|event.name\=__stringConstant("Modify")|event.deviceCustomString1Label\=__stringConstant("DN")

submessage[0].pattern[5].regex=op=(\\S+) (VLV) (\\d+):(\\d+):(\\S+) (\\d+):(\\d+) \\((\\d+)\\)
submessage[0].pattern[5].fields=additionaldata.Operation Number,event.deviceAction,event.deviceCustomString1,event.deviceCustomString2,event.deviceCustomString3,event.deviceCustomString4,event.deviceCustomString5,event.deviceCustomNumber1
submessage[0].pattern[5].extramappings=event.priority\=__integerConstant("3")|event.name\=__stringConstant("Virtual list views")|event.deviceCustomString1Label\=__stringConstant("Before Count")|event.deviceCustomString2Label\=__stringConstant("After Count")|event.deviceCustomString3Label\=__stringConstant("Value")|event.deviceCustomString4Label\=__stringConstant("Target Position")|event.deviceCustomString5Label\=__stringConstant("Content Count")|event.deviceCustomNumber1Label\=__stringConstant("Result Code")

submessage[0].pattern[6].regex=op=(\\S+) (SORT) (.*)
submessage[0].pattern[6].fields=additionaldata.Operation Number,event.deviceAction,event.message
submessage[0].pattern[6].extramappings=event.priority\=__integerConstant("3")|event.name\=__stringConstant("SORT")

submessage[0].pattern[7].regex=op=(\\S+) (ADD) (.*)
submessage[0].pattern[7].fields=event.deviceCustomString1,event.name,event.deviceCustomString2
submessage[0].pattern[7].extramappings=event.priority\=__integerConstant("3")

submessage[0].pattern[8].regex=op=(\\S+) (DEL) (.*)
submessage[0].pattern[8].fields=event.deviceCustomString1,event.name,event.deviceCustomString2
submessage[0].pattern[8].extramappings=event.priority\=__integerConstant("3")

submessage[0].pattern[9].regex=op=(\\S+) (MODDN) (.*)
submessage[0].pattern[9].fields=event.deviceCustomString1,event.name,event.deviceCustomString2
submessage[0].pattern[9].extramappings=event.priority\=__integerConstant("3")

submessage[0].pattern[10].regex=op=(\\S+) (UNBIND)
submessage[0].pattern[10].fields=additionaldata.Operation Number,event.deviceAction
submessage[0].pattern[10].extramappings=event.priority\=__integerConstant("3")|event.name\=__stringConstant("Unbind record")

submessage[0].pattern[11].regex=fd=(\\S+) slot=(\\S+) (.*) from (\\S+) to (\\S+)
submessage[0].pattern[11].fields=event.deviceCustomString1,event.deviceCustomString2,event.name,event.sourceHostName,event.destinationHostName
submessage[0].pattern[11].extramappings=event.priority\=__integerConstant("3")|event.deviceCustomString1Label\=__stringConstant("File Descriptor")|event.deviceCustomString2Label\=__stringConstant("Slot Number")

submessage[0].pattern[12].regex=op=(\\S+) fd=(\\S+) (closed) \\- (\\S+)
submessage[0].pattern[12].fields=additionaldata.Operation Number,event.deviceCustomString1,event.name,event.deviceCustomString2
submessage[0].pattern[12].extramappings=event.priority\=__integerConstant("3")|event.deviceCustomString1Label\=__stringConstant("File Descriptor")|event.deviceCustomString2Label\=__stringConstant("Connection Codes")
submessage[0].pattern[12].conditionalmap.count=1
submessage[0].pattern[12].conditionalmap[0].field=event.deviceCustomString2
submessage[0].pattern[12].conditionalmap[0].mappings.count=9
submessage[0].pattern[12].conditionalmap[0].mappings[0].values=A1
submessage[0].pattern[12].conditionalmap[0].mappings[0].event.message=__stringConstant("Client aborts the connection.")
submessage[0].pattern[12].conditionalmap[0].mappings[0].event.priority=__integerConstant("5")
submessage[0].pattern[12].conditionalmap[0].mappings[1].values=B1
submessage[0].pattern[12].conditionalmap[0].mappings[1].event.message=__stringConstant("Corrupt BER tag encountered or BER tag is longer than the nsslapd-maxbersize attribute value.")
submessage[0].pattern[12].conditionalmap[0].mappings[1].event.priority=__integerConstant("5")
submessage[0].pattern[12].conditionalmap[0].mappings[2].values=B2
submessage[0].pattern[12].conditionalmap[0].mappings[2].event.message=__stringConstant("BER tag is longer than the nsslapd-maxbersize attribute value.")
submessage[0].pattern[12].conditionalmap[0].mappings[2].event.priority=__integerConstant("5")
submessage[0].pattern[12].conditionalmap[0].mappings[3].values=B3
submessage[0].pattern[12].conditionalmap[0].mappings[3].event.message=__stringConstant("Corrupt BER tag encountered.")
submessage[0].pattern[12].conditionalmap[0].mappings[3].event.priority=__integerConstant("5")
submessage[0].pattern[12].conditionalmap[0].mappings[4].values=B4
submessage[0].pattern[12].conditionalmap[0].mappings[4].event.message=__stringConstant("Server failed to flush data response back to client.")
submessage[0].pattern[12].conditionalmap[0].mappings[4].event.priority=__integerConstant("5")
submessage[0].pattern[12].conditionalmap[0].mappings[5].values=P2
submessage[0].pattern[12].conditionalmap[0].mappings[5].event.message=__stringConstant("Closed or corrupt connection has been detected.")
submessage[0].pattern[12].conditionalmap[0].mappings[5].event.priority=__integerConstant("5")
submessage[0].pattern[12].conditionalmap[0].mappings[6].values=T1
submessage[0].pattern[12].conditionalmap[0].mappings[6].event.message=__stringConstant("Client does not receive a result within the specified idletimeout period.")
submessage[0].pattern[12].conditionalmap[0].mappings[6].event.priority=__integerConstant("5")
submessage[0].pattern[12].conditionalmap[0].mappings[7].values=T2
submessage[0].pattern[12].conditionalmap[0].mappings[7].event.message=__stringConstant("Server closed connection after ioblocktimeout period was exceeded.")
submessage[0].pattern[12].conditionalmap[0].mappings[7].event.priority=__integerConstant("5")
submessage[0].pattern[12].conditionalmap[0].mappings[8].values=U1
submessage[0].pattern[12].conditionalmap[0].mappings[8].event.message=__stringConstant("Connection closed by server after client sends an UNBIND request.")
submessage[0].pattern[12].conditionalmap[0].mappings[8].event.priority=__integerConstant("3")


submessage[0].pattern[13].regex=(.*)
submessage[0].pattern[13].fields=event.message

