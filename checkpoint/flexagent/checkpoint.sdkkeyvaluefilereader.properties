key.delimiter=\\|
key.value.delimiter==
key.regexp=([^=]+)

trim.tokens=true
trim.message=true
trim.keys=true

# Token types
token.count=69


token[0].name=time
token[0].type=Long
#token[0].type=TimeStamp
#token[0].format=yyyy-MM-dd HH:mm:ss

token[1].name=action
token[1].type=String

token[2].name=orig
token[2].type=IPAddress

token[3].name=alert
token[3].type=String

token[4].name=i/f_dir
token[4].type=String

token[5].name=i/f_name
token[5].type=String

token[6].name=origin_sic_name
token[6].type=String

token[7].name=uuid
token[7].type=String

token[8].name=default_device_message
token[8].type=String

token[9].name=facility
token[9].type=String

token[10].name=syslog_severity
token[10].type=String

token[11].name=policy_id_tag
token[11].type=String

token[12].name=sys_message
token[12].type=String

token[13].name=cluster_info
token[13].type=String

token[14].name=description
token[14].type=String

token[15].name=Protection Name
token[15].type=String

token[16].name=src
token[16].type=IPAddress

token[17].name=attack
token[17].type=String

token[18].name=drop reason
token[18].type=String

token[19].name=inzone
token[19].type=String

token[20].name=outzone
token[20].type=String

token[21].name=policy
token[21].type=String

token[22].name=scan_hosts_hour
token[22].type=Integer

token[23].name=Severity
token[23].type=String

token[24].name=status
token[24].type=String

token[25].name=TCP packet out of state
token[25].type=String

token[26].name=Attack Info
token[26].type=String

token[27].name=dst
token[27].type=IPAddress

token[28].name=first_hit_time
token[28].type=String

token[29].name=s_port
token[29].type=Integer

token[30].name=scan_hosts_day
token[30].type=Integer

token[31].name=service_id
token[31].type=String

token[32].name=tcp_flags
token[32].type=String

token[33].name=comment
token[33].type=String

token[34].name=last_hit_time
token[34].type=String

token[35].name=policy_time
token[35].type=String

token[36].name=protection_id
token[36].type=String

token[37].name=proto
token[37].type=String

token[38].name=scan_hosts_week
token[38].type=Integer

token[39].name=update_service
token[39].type=String

token[40].name=ICMP
token[40].type=String

token[41].name=message_info
token[41].type=String

token[42].name=service
token[42].type=String

token[43].name=special_properties
token[43].type=String

token[44].name=unique_detected_hour
token[44].type=Integer

token[45].name=Performance Impact
token[45].type=String
token[46].name=Protection ID
token[46].type=String

token[47].name=match_id
token[47].type=String

token[48].name=Protection Type
token[48].type=String

token[49].name=unique_detected_day
token[49].type=Integer

token[50].name=unique_detected_week
token[50].type=Integer

token[51].name=layer_uuid
token[51].type=String

token[52].name=scan_mail
token[52].type=String

token[53].name=ICMP Type
token[53].type=String

token[54].name=rule
token[54].type=String

token[55].name=layer_name
token[55].type=String

token[56].name=rule_uid
token[56].type=String

token[57].name=session_id
token[57].type=String

token[58].name=Total logs
token[58].type=String

token[59].name=xlatesrc
token[59].type=IPAddress

token[60].name=xlatedst
token[60].type=IPAddress

token[61].name=Description URL
token[61].type=String

token[62].name=Suppressed logs
token[62].type=String

token[63].name=xlatesport
token[63].type=Integer

token[64].name=xlatedport
token[64].type=Integer

token[65].name=d_port
token[65].type=Integer

token[66].name=malware_rule_name
token[66].type=String

token[67].name=orig_name
token[67].type=String

token[68].name=sys_message:
token[68].type=String


# Token mapping

# Device
#event.deviceReceiptTime=time
event.deviceReceiptTime=__createLocalTimeStampFromSecondsSinceEpoch(time)
event.deviceAction=__oneOf(action,alert)
event.deviceAddress=orig
event.deviceHostName=__toUpperCase(__replaceAll(__replaceAll(origin_sic_name,"[Cc][Nn]=",""),",[Oo]=.*",""))
event.deviceDirection=__getDeviceDirection(i/f_dir)
event.deviceInboundInterface=__ifThenElse(i/f_dir,"inbound",i/f_name,)
event.deviceOutboundInterface=__ifThenElse(i/f_dir,"outbound",i/f_name,)
event.deviceProduct=product
event.deviceFacility=facility
event.deviceSeverity=__oneOf(syslog_severity, Severity)
event.deviceEventClassId=__oneOf(cluster_info,description,attack,drop reason,Attack Info,ICMP,message_info)

event.name=__oneOf(action,alert,attack,__ifThenElse(product,"Anti Malware",__stringConstant("Anti Malware report"),),__ifThenElse(product,"Syslog",__stringConstant("Syslog"),))
event.externalId=uuid
event.message=__oneOf(default_device_message,sys_message,cluster_info,description,drop reason,TCP packet out of state,Attack Info,tcp_flags,comment,ICMP,message_info,__ifThenElse(product,"Anti Malware",__concatenate("Unique detected last hour: ",unique_detected_hour,"/",scan_hosts_hour),),sys_message:)
event.eventOutcome=__oneOf(status)
event.transportProtocol=proto

event.requestContext=origin_sic_name
event.requestUrl=Description URL

event.sourceAddress=src
event.sourcePort=s_port
event.sourceTranslatedAddress=xlatesrc
event.sourceTranslatedPort=xlatesport
#event.sourceZoneExternalId=inzone

event.destinationAddress=dst
event.destinationPort=__safeToInteger(__oneOf(service,d_port))
event.destinationTranslatedAddress=xlatedst
event.destinationTranslatedPort=xlatedport
#event.destinationZoneExternalId=outzone
event.destinationServiceName=__oneOf(service_id,service)
event.destinationHostName=orig_name

event.deviceCustomString1=__oneOf(rule,session_id,malware_rule_name)
event.deviceCustomString2=__oneOf(Protection Type,ICMP Type)
event.deviceCustomString3=__oneOf(policy_id_tag,protection_id,Protection ID)
event.deviceCustomString4=__oneOf(Protection Name,rule_uid)
event.deviceCustomString6=__oneOf(policy)


conditionalmap.count=2

conditionalmap[0].field=event.deviceAction
conditionalmap[0].mappings.count=3
conditionalmap[0].mappings[0].values=accept
conditionalmap[0].mappings[0].event.priority=__integerConstant("3")
conditionalmap[0].mappings[0].event.categoryOutcome=__stringConstant("/Success")
conditionalmap[0].mappings[0].event.categoryBehavior=__stringConstant("/Access")
conditionalmap[0].mappings[1].values=drop,reject,alert
conditionalmap[0].mappings[1].event.priority=__integerConstant("9")
conditionalmap[0].mappings[1].event.categoryOutcome=__stringConstant("/Failure")
conditionalmap[0].mappings[1].event.categoryBehavior=__stringConstant("/Access")
conditionalmap[0].mappings[2].values=monitor
conditionalmap[0].mappings[2].event.priority=__integerConstant("1")

# Severity based on syslog severity
conditionalmap[1].field=event.deviceSeverity
conditionalmap[1].mappings.count=8
conditionalmap[1].mappings[0].values=Emergency,Failed
conditionalmap[1].mappings[0].event.priority=__integerConstant("10")
conditionalmap[1].mappings[1].values=Alert
conditionalmap[1].mappings[1].event.priority=__integerConstant("9")
conditionalmap[1].mappings[2].values=Critical
conditionalmap[1].mappings[2].event.priority=__integerConstant("8")
conditionalmap[1].mappings[3].values=Error
conditionalmap[1].mappings[3].event.priority=__integerConstant("7")
conditionalmap[1].mappings[4].values=Warning
conditionalmap[1].mappings[4].event.priority=__integerConstant("6")
conditionalmap[1].mappings[5].values=Notice
conditionalmap[1].mappings[5].event.priority=__integerConstant("4")
conditionalmap[1].mappings[6].values=Informational
conditionalmap[1].mappings[6].event.priority=__integerConstant("3")
conditionalmap[1].mappings[7].values=Debugging
conditionalmap[1].mappings[7].event.priority=__integerConstant("0")

