# FlexAgent Regex Configuration File
do.unparsed.events=true
comments.start.with=\#
trim.tokens=true
contains.empty.tokens=true
additionaldata.enabled=true

regex=(\\d{2}),(\\S+),(\\S+),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*),(.*)

token.count=19

token[0].name=ID
token[0].type=String

token[1].name=Date
token[1].type=String

token[2].name=Time
token[2].type=String

token[3].name=Description
token[3].type=String

token[4].name=IP_Address
token[4].type=String

token[5].name=Host_Name
token[5].type=String

token[6].name=MAC_Address
token[6].type=String

token[7].name=User_Name
token[7].type=String

token[8].name=TransactionID
token[8].type=String

token[9].name=QResult
token[9].type=Integer

token[10].name=Probationtime
token[10].type=String

token[11].name=CorrelationID
token[11].type=String

token[12].name=Dhcid
token[12].type=String

token[13].name=VendorClass_Hex
token[13].type=String

token[14].name=VendorClass_ASCII
token[14].type=String

token[15].name=UserClass_Hex
token[15].type=String

token[16].name=UserClass_ASCII
token[16].type=String

token[17].name=RelayAgentInformation
token[17].type=String

token[18].name=DnsRegError
token[18].type=String

# Mapping

event.deviceVendor=__stringConstant("Microsoft")
event.deviceProduct=__stringConstant("DHCP Service Activity")

event.externalId=ID
event.endTime=__safeToDate(__concatenate(Date,Time),"MM/dd/yyHH:mm:ss")
event.name=Description
event.destinationAddress=__oneOfAddress(IP_Address)
event.destinationHostName=Host_Name
event.destinationMacAddress=__getLongMACAddressByString(MAC_Address)

event.deviceCustomNumber1=QResult


conditionalmap.count=2
conditionalmap[0].field=event.externalId
conditionalmap[0].mappings.count=25
conditionalmap[0].mappings[0].values=00
conditionalmap[0].mappings[0].event.message=__stringConstant("The log was started.")
conditionalmap[0].mappings[0].event.priority=__integerConstant("9")
conditionalmap[0].mappings[1].values=01
conditionalmap[0].mappings[1].event.message=__stringConstant("The log was stopped.")
conditionalmap[0].mappings[1].event.priority=__integerConstant("9")
conditionalmap[0].mappings[2].values=02
conditionalmap[0].mappings[2].event.message=__stringConstant("The log was temporarily paused due to low disk space.")
conditionalmap[0].mappings[2].event.priority=__integerConstant("9")
conditionalmap[0].mappings[3].values=10
conditionalmap[0].mappings[3].event.message=__stringConstant("A new IP address was leased to a client.")
conditionalmap[0].mappings[3].event.priority=__integerConstant("3")
conditionalmap[0].mappings[4].values=11
conditionalmap[0].mappings[4].event.message=__stringConstant("A lease was renewed by a client.")
conditionalmap[0].mappings[4].event.priority=__integerConstant("3")
conditionalmap[0].mappings[5].values=12
conditionalmap[0].mappings[5].event.message=__stringConstant("A lease was released by a client.")
conditionalmap[0].mappings[5].event.priority=__integerConstant("3")
conditionalmap[0].mappings[6].values=13
conditionalmap[0].mappings[6].event.message=__stringConstant("An IP address was found to be in use on the network.")
conditionalmap[0].mappings[6].event.priority=__integerConstant("3")
conditionalmap[0].mappings[7].values=14
conditionalmap[0].mappings[7].event.message=__stringConstant("A lease request could not be satisfied because the scope's address pool was exhausted.")
conditionalmap[0].mappings[7].event.priority=__integerConstant("5")
conditionalmap[0].mappings[8].values=15
conditionalmap[0].mappings[8].event.message=__stringConstant("A lease was denied.")
conditionalmap[0].mappings[8].event.priority=__integerConstant("5")
conditionalmap[0].mappings[9].values=16
conditionalmap[0].mappings[9].event.message=__stringConstant("A lease was deleted.")
conditionalmap[0].mappings[9].event.priority=__integerConstant("5")
conditionalmap[0].mappings[10].values=17
conditionalmap[0].mappings[10].event.message=__stringConstant("A lease was expired and DNS records for an expired leases have not been deleted.")
conditionalmap[0].mappings[10].event.priority=__integerConstant("5")
conditionalmap[0].mappings[11].values=18
conditionalmap[0].mappings[11].event.message=__stringConstant("A lease was expired and DNS records were deleted.")
conditionalmap[0].mappings[11].event.priority=__integerConstant("5")
conditionalmap[0].mappings[12].values=20
conditionalmap[0].mappings[12].event.message=__stringConstant("A BOOTP address was leased to a client.")
conditionalmap[0].mappings[12].event.priority=__integerConstant("3")
conditionalmap[0].mappings[13].values=21
conditionalmap[0].mappings[13].event.message=__stringConstant("A dynamic BOOTP address was leased to a client.")
conditionalmap[0].mappings[13].event.priority=__integerConstant("3")
conditionalmap[0].mappings[14].values=22
conditionalmap[0].mappings[14].event.message=__stringConstant("A BOOTP request could not be satisfied because the scope's address pool for BOOTP was exhausted.")
conditionalmap[0].mappings[14].event.priority=__integerConstant("5")
conditionalmap[0].mappings[15].values=23
conditionalmap[0].mappings[15].event.message=__stringConstant("A BOOTP IP address was deleted after checking to see it was not in use.")
conditionalmap[0].mappings[15].event.priority=__integerConstant("5")
conditionalmap[0].mappings[16].values=24
conditionalmap[0].mappings[16].event.message=__stringConstant("IP address cleanup operation has began.")
conditionalmap[0].mappings[16].event.priority=__integerConstant("3")
conditionalmap[0].mappings[17].values=25
conditionalmap[0].mappings[17].event.message=__stringConstant("IP address cleanup statistics.")
conditionalmap[0].mappings[17].event.priority=__integerConstant("3")
conditionalmap[0].mappings[18].values=30
conditionalmap[0].mappings[18].event.message=__stringConstant("DNS update request to the named DNS server.")
conditionalmap[0].mappings[18].event.priority=__integerConstant("3")
conditionalmap[0].mappings[19].values=31
conditionalmap[0].mappings[19].event.message=__stringConstant("DNS update failed.")
conditionalmap[0].mappings[19].event.priority=__integerConstant("5")
conditionalmap[0].mappings[20].values=32
conditionalmap[0].mappings[20].event.message=__stringConstant("DNS update successful.")
conditionalmap[0].mappings[20].event.priority=__integerConstant("3")
conditionalmap[0].mappings[21].values=33
conditionalmap[0].mappings[21].event.message=__stringConstant("Packet dropped due to NAP policy.")
conditionalmap[0].mappings[21].event.priority=__integerConstant("5")
conditionalmap[0].mappings[22].values=34
conditionalmap[0].mappings[22].event.message=__stringConstant("DNS update request failed.as the DNS update request queue limit exceeded.")
conditionalmap[0].mappings[22].event.priority=__integerConstant("5")
conditionalmap[0].mappings[23].values=35
conditionalmap[0].mappings[23].event.message=__stringConstant("DNS update request failed.")
conditionalmap[0].mappings[23].event.priority=__integerConstant("5")
conditionalmap[0].mappings[24].values=36
conditionalmap[0].mappings[24].event.message=__stringConstant("Packet dropped because the server is in failover standby role or the hash of the client ID does not match.")
conditionalmap[0].mappings[24].event.priority=__integerConstant("5")
conditionalmap[0].mappings[25].event.message=__stringConstant("Rogue Server Detection information.")
conditionalmap[0].mappings[25].event.priority=__integerConstant("1")

conditionalmap[1].field=event.deviceCustomNumber1
conditionalmap[1].mappings.count=5
conditionalmap[1].mappings[0].values=0
conditionalmap[1].mappings[0].event.deviceCustomString1=__stringConstant("NoQuarantine")
conditionalmap[1].mappings[1].values=1
conditionalmap[1].mappings[1].event.deviceCustomString1=__stringConstant("Quarantine")
conditionalmap[1].mappings[2].values=2
conditionalmap[1].mappings[2].event.deviceCustomString1=__stringConstant("Drop Packet")
conditionalmap[1].mappings[3].values=3
conditionalmap[1].mappings[3].event.deviceCustomString1=__stringConstant("Probation")
conditionalmap[1].mappings[4].values=4
conditionalmap[1].mappings[4].event.deviceCustomString1=__stringConstant("No Quarantine Information")
